/**
 * Syst√®me de notifications email pour le syst√®me de messagerie
 * 7 types d'emails automatiques
 */

// Note: Configuration nodemailer √† faire selon votre service SMTP
// Pour l'instant, ce module log les emails en console

async function sendNewMessageNotification(user, conversation, message) {
  console.log(`
üìß EMAIL: Nouveau message re√ßu
To: ${user.email}
Subject: Nouveau message sur votre projet

Bonjour ${user.firstName},

Vous avez re√ßu un nouveau message concernant le projet "${conversation.project.title}".

Message: "${message.contentFiltered.substring(0, 100)}..."

R√©pondez d√®s maintenant: ${process.env.APP_URL}/conversation/${conversation._id}

Cordialement,
L'√©quipe Marketplace 3D
  `);

  // TODO: Impl√©menter envoi r√©el avec nodemailer
  return { sent: true };
}

async function sendQuoteNotification(user, conversation, quote) {
  console.log(`
üìß EMAIL: Nouveau devis re√ßu
To: ${user.email}
Subject: Nouveau devis pour votre projet

Bonjour ${user.firstName},

Vous avez re√ßu un devis pour votre projet "${conversation.project.title}".

Prix total: ${quote.totalPrice}‚Ç¨
D√©lai: ${quote.deliveryDays} jours
Mat√©riaux: ${quote.materials.join(', ')}

Consultez le devis: ${process.env.APP_URL}/conversation/${conversation._id}

Cordialement,
L'√©quipe Marketplace 3D
  `);

  return { sent: true };
}

async function sendQuoteAcceptedNotification(printer, conversation) {
  console.log(`
üìß EMAIL: Votre devis a √©t√© accept√©
To: ${printer.email}
Subject: Votre devis a √©t√© accept√© !

Bonjour ${printer.firstName},

Bonne nouvelle ! Le client a accept√© votre devis pour le projet "${conversation.project.title}".

Prix: ${conversation.currentQuote.totalPrice}‚Ç¨
D√©lai: ${conversation.currentQuote.deliveryDays} jours

Prochaine √©tape: Signature du contrat
Acc√©der √† la conversation: ${process.env.APP_URL}/conversation/${conversation._id}

Cordialement,
L'√©quipe Marketplace 3D
  `);

  return { sent: true };
}

async function sendContractSignedNotification(user, conversation, otherParty) {
  console.log(`
üìß EMAIL: Contrat sign√©
To: ${user.email}
Subject: Contrat sign√© - Projet "${conversation.project.title}"

Bonjour ${user.firstName},

Le contrat a √©t√© sign√© par les deux parties !

Projet: ${conversation.project.title}
Prix: ${conversation.currentQuote.totalPrice}‚Ç¨
D√©lai: ${conversation.currentQuote.deliveryDays} jours

Le projet peut maintenant d√©marrer.

Acc√©der √† la conversation: ${process.env.APP_URL}/conversation/${conversation._id}

Cordialement,
L'√©quipe Marketplace 3D
  `);

  return { sent: true };
}

async function sendCancellationNotification(user, conversation, reason, cancelledBy) {
  console.log(`
üìß EMAIL: Conversation annul√©e
To: ${user.email}
Subject: Annulation - Projet "${conversation.project.title}"

Bonjour ${user.firstName},

La conversation concernant le projet "${conversation.project.title}" a √©t√© annul√©e.

Annul√© par: ${cancelledBy === 'client' ? 'le client' : 'l\'imprimeur'}
Raison: ${reason}

Vous pouvez consulter d'autres ${user.role === 'client' ? 'imprimeurs' : 'projets'} disponibles sur la plateforme.

Cordialement,
L'√©quipe Marketplace 3D
  `);

  return { sent: true };
}

async function sendInactivityReminder(user, conversation) {
  console.log(`
üìß EMAIL: Relance d'inactivit√©
To: ${user.email}
Subject: Relance - Projet "${conversation.project.title}"

Bonjour ${user.firstName},

Nous avons remarqu√© que vous n'avez pas r√©pondu depuis 48 heures sur le projet "${conversation.project.title}".

L'autre partie attend votre r√©ponse. N'oubliez pas de consulter la conversation pour faire avancer le projet.

Acc√©der √† la conversation: ${process.env.APP_URL}/conversation/${conversation._id}

Cordialement,
L'√©quipe Marketplace 3D
  `);

  return { sent: true };
}

async function sendMediationRequest(admins, conversation, reason, requestedBy) {
  console.log(`
üìß EMAIL: Demande de m√©diation (ADMIN)
To: admins@marketplace3d.com
Subject: [URGENT] Demande de m√©diation

Une demande de m√©diation a √©t√© soumise.

Conversation ID: ${conversation._id}
Projet: ${conversation.project.title}
Demand√© par: ${requestedBy === 'client' ? 'Client' : 'Imprimeur'}
Raison: ${reason}

Acc√©der √† la mod√©ration: ${process.env.APP_URL}/admin/conversations/${conversation._id}

‚ö†Ô∏è Action requise rapidement.
  `);

  return { sent: true };
}

module.exports = {
  sendNewMessageNotification,
  sendQuoteNotification,
  sendQuoteAcceptedNotification,
  sendContractSignedNotification,
  sendCancellationNotification,
  sendInactivityReminder,
  sendMediationRequest
};
